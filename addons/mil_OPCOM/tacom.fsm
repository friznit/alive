/*%FSM<COMPILE "C:\Program Files (x86)\Bohemia Interactive\Tools\FSM Editor Personal Edition\scriptedFSM.cfg, tacom">*/
/*%FSM<HEAD>*/
/*
item0[] = {"INIT",0,4346,-191.791229,-248.493942,-101.791237,-198.494003,0.000000,"INIT"};
item1[] = {"INIT_COMPLETE",4,218,-194.557098,-181.067123,-104.557114,-131.067123,0.000000,"INIT" \n "COMPLETE"};
item2[] = {"ANALYZE",2,250,-398.915314,190.635864,98.822098,238.500443,0.000000,"ANALYZE"};
item3[] = {"RECEIVE",4,218,-194.508545,-19.777693,-104.508537,30.222303,0.000000,"RECEIVE"};
item4[] = {"CAPTURE_Conditio",4,218,-296.383759,269.200836,-206.383591,319.200775,3.000000,"CAPTURE" \n "Conditions"};
item5[] = {"",7,210,176.004105,761.434937,184.004105,769.434814,0.000000,""};
item6[] = {"",7,210,174.604492,1.165148,182.604553,9.165155,0.000000,""};
item7[] = {"DEFEND_condition",4,218,-197.909698,270.277069,-107.909790,320.277069,2.000000,"DEFEND" \n "conditions"};
item8[] = {"RESERVE_conditio",4,218,-98.860970,268.983917,-8.860947,318.983917,1.000000,"RESERVE" \n "conditions"};
item9[] = {"CUSTOM_condition",4,218,5.405207,267.636688,95.405060,317.636871,0.000000,"CUSTOM" \n "conditions"};
item10[] = {"ISSUE_ORDERS",2,250,-405.948853,673.407532,93.318497,717.610718,0.000000,"ISSUE ORDERS"};
item11[] = {"GROUP_NOT_CONFIR",4,218,-146.461060,733.516846,-56.461060,783.517090,0.000000,"GROUP" \n "NOT" \n "CONFIRM"};
item12[] = {"GROUP_CONFIRM",4,218,-250.579010,734.345947,-160.579208,784.346069,0.000000,"GROUP" \n "CONFIRM"};
item13[] = {"",7,210,-509.836731,753.771851,-501.836670,761.771851,0.000000,""};
item14[] = {"",7,210,-513.869507,2.740855,-505.869385,10.740835,0.000000,""};
item15[] = {"INITIALIZE",2,250,-195.246613,-87.998024,-105.246597,-37.998020,0.000000,"INITIALIZE"};
item16[] = {"_",-1,250,-440.685394,-235.585892,-437.600311,-235.585892,0.000000,""};
item17[] = {"TRANSMIT_TO_OPCO",2,250,-378.147766,732.947388,-288.147766,782.947510,0.000000,"TRANSMIT" \n "TO" \n "OPCOM"};
item18[] = {"TRANSMIT_TO_OPCO_1",2,250,-26.008476,729.562744,63.991539,779.562866,0.000000,"TRANSMIT" \n "TO" \n "OPCOM"};
item19[] = {"RECON_Conditions",4,218,-399.338531,271.491608,-309.338531,321.491608,0.000000,"RECON" \n "Conditions"};
item20[] = {"COLLECT_TO_QUEUE",2,250,-191.535400,70.489761,-101.535316,120.489708,0.000000,"COLLECT" \n "TO QUEUE"};
item21[] = {"ENTRIES_IN_QUEUE",4,218,-190.104828,130.570953,-100.104851,180.571014,0.000000,"ENTRIES" \n "IN QUEUE"};
item22[] = {"Feeder",4,218,-362.502472,61.897980,-272.502472,111.897957,0.000000,"Feeder"};
item23[] = {"SELECT_SECTION",2,250,-202.907623,354.023041,-112.907623,404.023041,0.000000,"SELECT" \n "SECTION"};
item24[] = {"SECTION_SELECTED",4,218,-197.466095,422.042877,-107.466232,472.042908,0.000000,"SECTION" \n "SELECTED"};
item25[] = {"PREPARE_ORDERS",2,250,-202.980865,484.718994,-112.980873,534.719238,0.000000,"PREPARE" \n "ORDERS"};
item26[] = {"PREPARED",4,218,-202.116547,569.103699,-112.116524,619.103699,0.000000,"PREPARED"};
version=1;
class LayoutItems
{
	class Item16
	{
		class ItemInfo
		{
			FontFace="Arial";
			FontHeight=10;
			lStyle=1;
		};
	};
};
link0[] = {0,1};
link1[] = {1,15};
link2[] = {2,3};
link3[] = {2,4};
link4[] = {2,7};
link5[] = {2,8};
link6[] = {2,9};
link7[] = {2,19};
link8[] = {2,22};
link9[] = {3,20};
link10[] = {4,23};
link11[] = {5,6};
link12[] = {6,3};
link13[] = {7,23};
link14[] = {8,23};
link15[] = {9,23};
link16[] = {10,11};
link17[] = {10,12};
link18[] = {11,18};
link19[] = {12,17};
link20[] = {13,14};
link21[] = {14,3};
link22[] = {15,3};
link23[] = {17,13};
link24[] = {18,5};
link25[] = {19,23};
link26[] = {20,21};
link27[] = {21,2};
link28[] = {22,2};
link29[] = {23,24};
link30[] = {24,25};
link31[] = {25,26};
link32[] = {26,10};
globals[] = {0.000000,0,0,0,16777215,640,480,1,79,6316128,1,-544.663452,93.571182,334.844879,-429.210236,629,753,1};
window[] = {0,-1,-1,-1,-1,928,44,1667,44,1,646};
*//*%FSM</HEAD>*/
class FSM
{
  fsmName = "tacom";
  class States
  {
    /*%FSM<STATE "INIT">*/
    class INIT
    {
      name = "INIT";
      init = /*%FSM<STATEINIT""">*/"_busy = false;" \n
       "_TAC_confirmed = false;" \n
       "" \n
       "_TACOM_status = ""PreInit"";" \n
       "_timestamp = time;" \n
       "" \n
       "_OPCOM_HANDLER = _this select 0;" \n
       "_OPCOM_FSM =  [_OPCOM_HANDLER,""OPCOM_FSM""] call ALiVE_fnc_HashGet;" \n
       "_TACOM_FSM =  [_OPCOM_HANDLER,""TACOM_FSM""] call ALiVE_fnc_HashGet;" \n
       "_TACOM_QUEUE = [];" \n
       "" \n
       "_debug = [_OPCOM_HANDLER,""debug"",false] call ALiVE_fnc_HashGet;" \n
       "_side = [_OPCOM_HANDLER,""side"",""EAST""] call ALiVE_fnc_HashGet;" \n
       "_sidesEnemy = [_OPCOM_HANDLER,""sidesenemy"",""WEST""] call ALiVE_fnc_HashGet;" \n
       "" \n
       "_lastanalyze = 0;" \n
       "_cycleTime = 120;" \n
       "" \n
       "_sectionsamount_attack = [_OPCOM_HANDLER,""sectionsamount_attack"",4] call ALiVE_fnc_HashGet;" \n
       "_sectionsamount_reserve = [_OPCOM_HANDLER,""sectionsamount_reserve"",1] call ALiVE_fnc_HashGet;" \n
       "_sectionsamount_defend = [_OPCOM_HANDLER,""sectionsamount_defend"",2] call ALiVE_fnc_HashGet;" \n
       "" \n
       "switch (_side) do {" \n
       "	case (""WEST"") : {_colorside = ""ColorBlue""};" \n
       "	case (""EAST"") : {_colorside = ""ColorRed""};" \n
       "	case (""GUER"") : {_colorside = ""ColorGreen""};" \n
       "	default {_colorside = ""ColorRed""};" \n
       "};" \n
       "" \n
       "//Add random movement to profiles so they dont stand still if no waypoints" \n
       "_profIDs = [ALIVE_profileHandler, ""getProfilesBySide"",[_OPCOM_HANDLER,""side""] call ALiVE_fnc_HashGet] call ALIVE_fnc_profileHandler;" \n
       " player sidechat format[""%1 profiles for side %2"",count _profIDs,([_OPCOM_HANDLER,""side""] call ALiVE_fnc_HashGet)];" \n
       "{" \n
       "                        private [""_prof"",""_type""];" \n
       "                        _prof = [ALiVE_ProfileHandler,""getProfile"",_x] call ALiVE_fnc_ProfileHandler;" \n
       "                        [_prof, ""addActiveCommand"", [""ALIVE_fnc_ambientMovement"",""spawn"",200]] call ALIVE_fnc_profileEntity;" \n
       "} foreach _profIDs;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "INIT_COMPLETE">*/
        class INIT_COMPLETE
        {
          priority = 0.000000;
          to="INITIALIZE";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_OPCOM_FSM =  [_OPCOM_HANDLER,""OPCOM_FSM""] call ALiVE_fnc_HashGet;" \n
           "_TACOM_FSM =  [_OPCOM_HANDLER,""TACOM_FSM""] call ALiVE_fnc_HashGet;" \n
           "" \n
           "!(isnil ""_OPCOM_FSM"") && !(isnil ""_TACOM_FSM"") && {_OPCOM_FSM > 0 && _TACOM_FSM > 0};"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "ANALYZE">*/
    class ANALYZE
    {
      name = "ANALYZE";
      init = /*%FSM<STATEINIT""">*/"private [""_pos"",""_objective"",""_size"",""_operation"",""_data_operation"",""_data_value"",""_tacom_data"",""_recon"",""_capture"",""_defend"",""_reserve"",""_custom"",""_dataset"",""_transmit"",""_TACOM_ACTION"",""_timeout"",""_section"",""_sectionSupport""];" \n
       "" \n
       "_busy = true;" \n
       "_TACOM_status = ""Analysis"";" \n
       "_timestamp = time;" \n
       "" \n
       "_recon = nil;" \n
       "_capture = nil;" \n
       "_defend = nil;" \n
       "_reserve = nil;" \n
       "_custom = nil;" \n
       "" \n
       "_section = [];" \n
       "_sections = [];" \n
       "" \n
       "if (count _TACOM_QUEUE > 0) then {" \n
       "	_TACOM_ACTION = _TACOM_QUEUE select 0;" \n
       "	_TACOM_QUEUE set [0,""x""];" \n
       "	_TACOM_QUEUE = _TACOM_QUEUE - [""x""];" \n
       "};" \n
       "" \n
       "_timeout = ((isnil ""_TACOM_ACTION"") && {(time - _lastAnalyze) >= 15});" \n
       "if (_timeout) then {_TACOM_ACTION = [""analyze_internal"",nil]};" \n
       "" \n
       "//start operating if data received" \n
       "if !(isnil ""_TACOM_ACTION"") then {" \n
       "	_DATA_OPERATION = _TACOM_ACTION select 0;" \n
       "	_DATA_VALUE = _TACOM_ACTION select 1;" \n
       "	_TACOM_ACTION = nil;" \n
       "" \n
       "	//select data operation" \n
       "	switch (_DATA_OPERATION) do {" \n
       "" \n
       "		case (""analyze_internal"") : {" \n
       "		// Empty for now" \n
       "		};" \n
       "		" \n
       "		//Analyze sent data" \n
       "		case (""analyze"") : {" \n
       "			_objective = _DATA_VALUE;" \n
       "			_pos = [_objective,""center""] call AliVE_fnc_HashGet;" \n
       "			_opcom_orders = [_objective,""opcom_orders""] call AliVE_fnc_HashGet;" \n
       "" \n
       "			//Attack reported enemy directly" \n
       "			if (count ([_OPCOM_HANDLER,""knownentities"",[]] call ALiVE_fnc_HashGet) > 0) then {" \n
       "" \n
       "				_trgt = ([_OPCOM_HANDLER,""knownentities"",[]] call ALiVE_fnc_HashGet) select 0 select 0;" \n
       "				_prf = [ALIVE_profileHandler, ""getProfile"",_trgt] call ALIVE_fnc_profileHandler;" \n
       "" \n
       "				if  (isnil ""_prf"") exitwith {};" \n
       "" \n
       "					_ass= ([_prf,""vehicleAssignments"",[[],[]]] call ALIVE_fnc_hashGet) select 1;" \n
       "" \n
       "					if (count _ass > 0) then {" \n
       "						// Attack with one air vehicle if target is in a vehicle" \n
       "						_attackers = [_OPCOM_HANDLER, ""attackentity"",[_trgt,1,""air""]] call ALIVE_fnc_OPCOM;" \n
       "					} else {" \n
       "						// Send 2 infantry groups if target is not in a vehicle" \n
       "						_attackers = [_OPCOM_HANDLER, ""attackentity"",[_trgt,2,""infantry""]] call ALIVE_fnc_OPCOM;" \n
       "					};" \n
       "			};" \n
       "" \n
       "			//select internal TACOM orders by global OPCOM order and set appropriate conditions for execution" \n
       "			switch (_opcom_orders) do {" \n
       "" \n
       "				case (""attack"") : {" \n
       "					_danger = [_objective,""danger"",-1] call AliVE_fnc_HashGet;" \n
       "					_size = _sectionsamount_attack;" \n
       "" \n
       "					switch (_danger < 1) do {" \n
       "						case (true) : {_recon = [_objective,_size]};" \n
       "						case (false) : {_capture = [_objective,_size]};" \n
       "					};" \n
       "				};" \n
       "" \n
       "				case (""defend"") : {" \n
       "" \n
       "					_nearEnemies = []; " \n
       "					{private [""_nE""]; _nE = [_objective,""entitiesnearsector"",[_pos,_x,false]] call AliVE_fnc_OPCOM; _nearEnemies = _nearEnemies + _nE} foreach _sidesEnemy;" \n
       "" \n
       "					_size = _sectionsamount_defend;" \n
       "" \n
       "					switch (count _nearEnemies > 0) do {" \n
       "						case (true) : {_defend = [_objective,_size]};" \n
       "						case (false) : {_reserve = [_objective,_size]};" \n
       "					};" \n
       "				};" \n
       "		" \n
       "				case (""reserve"") : {" \n
       "					_size = _sectionsamount_reserve;" \n
       "" \n
       "					_reserve = [_objective,_size];" \n
       "				};" \n
       "				case (""custom"") : {};" \n
       "				default {};" \n
       "			};" \n
       "		};" \n
       "" \n
       "		//handle internal order completion by TACOM order state" \n
       "		case (""completed"") : {" \n
       "			private [""_ProfileID"",""_profile""];" \n
       "" \n
       "			_ProfileID = _DATA_VALUE select 0;" \n
       "			_objectiveID = _DATA_VALUE select 1;" \n
       "			_orders = _DATA_VALUE select 2;" \n
       "" \n
       "			_objective = [_OPCOM_HANDLER,""getobjectivebyid"",_objectiveID] call ALiVE_fnc_OPCOM;" \n
       "			_profile = [ALiVE_ProfileHandler,""getProfile"",_profileID] call ALiVE_fnc_ProfileHandler;" \n
       "" \n
       "			if (isnil ""_profile"") exitwith {_TACOM_DATA = [""analyze"",_objective]; _busy = false};" \n
       "" \n
       "			_posP = [_profile,""position""] call ALiVE_fnc_HashGet;" \n
       "			_section = [_objective,""section""] call AliVE_fnc_HashGet;" \n
       "			_state = [_objective,""tacom_state""] call AliVE_fnc_HashGet;" \n
       "			_transmit = !([_objective,""opcom_state""] call AliVE_fnc_HashGet == ""internal"");" \n
       "			_dataset = nil;" \n
       "" \n
       "			switch (_state) do {" \n
       "				case (""recon"") : {" \n
       "					if !([_OPCOM_HANDLER,""synchronizeorders"",_ProfileID] call ALiVE_fnc_OPCOM) exitwith {" \n
       "						// debug ---------------------------------------" \n
       "						if(_debug) then { [""TACOM %1 regrouping! Waiting for %2 groups!"",_ProfileID,({_objectiveID == (_x select 2)} count ([_OPCOM_HANDLER,""pendingorders"",[]] call ALiVE_fnc_HashGet))] call ALIVE_fnc_dumpR; };" \n
       "						// debug ---------------------------------------" \n
       "					};" \n
       "						//Scan for visible enemies (done only once on recon for performance sake - regulary scan every 2 minutes done by OPCOM)" \n
       "						_visibleEnemies = [_OPCOM_HANDLER,""scanenemies"",_posP] call ALiVE_fnc_OPCOM;" \n
       "" \n
       "						// TBD: Calculate danger level depending on recon outcome (sector analysis)" \n
       "						[_objective,""danger"",5] call AliVE_fnc_HashSet;" \n
       "" \n
       "						//analyse as recon is completed" \n
       "						_dataset = {_TACOM_DATA = [""analyze"",_objective]};" \n
       "				};" \n
       "				case (""capture"") : {" \n
       "					if !([_OPCOM_HANDLER,""synchronizeorders"",_ProfileID] call ALiVE_fnc_OPCOM) exitwith {" \n
       "						// debug ---------------------------------------" \n
       "						if(_debug) then { [""TACOM %1 regrouping! Waiting for %2 groups!"",_ProfileID,({_objectiveID == (_x select 2)} count ([_OPCOM_HANDLER,""pendingorders"",[]] call ALiVE_fnc_HashGet))] call ALIVE_fnc_dumpR; };" \n
       "						// debug ---------------------------------------" \n
       "					};" \n
       "					" \n
       "						//set objective state and re-analyse after objective state change" \n
       "						[_objective,""opcom_state"",""reserve""] call AliVE_fnc_HashSet;" \n
       "						[_objective,""opcom_orders"",""reserve""] call AliVE_fnc_HashSet;" \n
       "						_dataset = {_TACOM_DATA = [""analyze"",_objective]};" \n
       "				};" \n
       "				case (""defend"") : {" \n
       "					if !([_OPCOM_HANDLER,""synchronizeorders"",_ProfileID] call ALiVE_fnc_OPCOM) exitwith {" \n
       "						// debug ---------------------------------------" \n
       "						if(_debug) then { [""TACOM %1 regrouping! Waiting for %2 groups!"",_ProfileID,({_objectiveID == (_x select 2)} count ([_OPCOM_HANDLER,""pendingorders"",[]] call ALiVE_fnc_HashGet))] call ALIVE_fnc_dumpR; };" \n
       "						// debug ---------------------------------------" \n
       "					};" \n
       "				" \n
       "						//analyse" \n
       "						_dataset = {_TACOM_DATA = [""analyze"",_objective]};" \n
       "				};" \n
       "				case (""reserve"") : {" \n
       "					_ProfilesReserve = [_OPCOM_HANDLER,""ProfileIDsReserve"",[]] call ALiVE_fnc_HashGet;" \n
       "					if !(_ProfileID in _ProfilesReserve) then {" \n
       "						[_OPCOM_HANDLER,""ProfileIDsReserve"",_ProfilesReserve + [_ProfileID]] call ALiVE_fnc_HashSet;" \n
       "					};" \n
       "" \n
       "					if !([_OPCOM_HANDLER,""synchronizeorders"",_ProfileID] call ALiVE_fnc_OPCOM) exitwith {" \n
       "						// debug ---------------------------------------" \n
       "						if(_debug) then { [""TACOM %1 regrouping! Waiting for %2 groups!"",_ProfileID,({_objectiveID == (_x select 2)} count ([_OPCOM_HANDLER,""pendingorders"",[]] call ALiVE_fnc_HashGet))] call ALIVE_fnc_dumpR; };" \n
       "						// debug ---------------------------------------" \n
       "					};" \n
       "" \n
       "					//Command to garrison" \n
       "					[_profile, ""clearActiveCommands""] call ALIVE_fnc_profileEntity;" \n
       "					[_profile, ""addActiveCommand"", [""ALIVE_fnc_garrison"",""spawn"",200]] call ALIVE_fnc_profileEntity;" \n
       "" \n
       "					//transmit to OPCOM as objective was completed" \n
       "					[_objective,""opcom_state"",""idle""] call AliVE_fnc_HashSet;" \n
       "					[_objective,""opcom_orders"",""none""] call AliVE_fnc_HashSet;" \n
       "					if (_debug) then {([_objective,""objectiveID""] call AliVE_fnc_HashGet) setMarkerColorLocal _colorside};" \n
       "				};" \n
       "				default {_dataset = {}};" \n
       "			};" \n
       "			if !(isnil ""_dataset"") then {if (_transmit) then {call _dataset}};" \n
       "		};" \n
       "		default {};" \n
       "	};" \n
       "	_busy = false;" \n
       "} else {" \n
       "	_busy = false;" \n
       "};" \n
       "" \n
       "_lastanalyze = time;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "CAPTURE_Conditio">*/
        class CAPTURE_Conditio
        {
          priority = 3.000000;
          to="SELECT_SECTION";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"!(isnil ""_capture"");"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "DEFEND_condition">*/
        class DEFEND_condition
        {
          priority = 2.000000;
          to="SELECT_SECTION";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"!(isnil ""_defend"");"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "RESERVE_conditio">*/
        class RESERVE_conditio
        {
          priority = 1.000000;
          to="SELECT_SECTION";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"!(isnil ""_reserve"");"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "CUSTOM_condition">*/
        class CUSTOM_condition
        {
          priority = 0.000000;
          to="SELECT_SECTION";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"!(isnil ""_custom"");"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "RECON_Conditions">*/
        class RECON_Conditions
        {
          priority = 0.000000;
          to="SELECT_SECTION";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"!(isnil ""_recon"");"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "Feeder">*/
        class Feeder
        {
          priority = 0.000000;
          to="ANALYZE";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"time - _lastanalyze > 15;"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "RECEIVE">*/
        class RECEIVE
        {
          priority = 0.000000;
          to="COLLECT_TO_QUEUE";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_TACOM_status = ""waiting for data"";" \n
           "!(isnil ""_TACOM_DATA"");"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "ISSUE_ORDERS">*/
    class ISSUE_ORDERS
    {
      name = "ISSUE_ORDERS";
      init = /*%FSM<STATEINIT""">*/"private [""_profiles"",""_data"",""_state"",""_section"",""_pos"",""_objectiveID"",""_turn"",""_objectivesX""];" \n
       "" \n
       "_TACOM_status = ""Order"";" \n
       "_timestamp = time;" \n
       "" \n
       "//Get all profileIDs and objectives" \n
       "_profiles = ([ALIVE_profileHandler, ""getProfiles"", ""entity""] call ALIVE_fnc_profileHandler) select 1;" \n
       "_objectives = [_OPCOM_HANDLER,""objectives""] call ALiVE_fnc_HashGet;" \n
       "_section = [_objective,""section"",[]] call AliVE_fnc_HashGet;" \n
       "_state = [_objective,""opcom_state"",""unassigned""] call ALiVE_fnc_HashGet;" \n
       "_pos = [_objective,""center""] call AliVE_fnc_HashGet;" \n
       "_objectiveID = [_objective,""objectiveID""] call AliVE_fnc_HashGet;" \n
       "" \n
       "//set orders by type" \n
       "switch (_operation) do {" \n
       "" \n
       "		case ( ""recon"") : {" \n
       "			_turn = true;" \n
       "" \n
       "			if (count _section >= _sectionsamount_attack) then {" \n
       "				[_objective,""tacom_state"",""recon""] call AliVE_fnc_HashSet;" \n
       "" \n
       "				{" \n
       "					_profileID = _x;" \n
       "" \n
       "					if (_profileID in _profiles) then {" \n
       "						_profile = [ALIVE_profileHandler, ""getProfile"", _profileID] call ALIVE_fnc_profileHandler;" \n
       "" \n
       "						//Select recon postion in angle to objectve" \n
       "						_posP = [_profile, ""position""] call ALIVE_fnc_profileEntity;" \n
       "						_direction = [_pos, _posP] call BIS_fnc_dirTo;" \n
       "						_newPosition = [_pos, 300, _direction] call BIS_fnc_relPos;" \n
       "						if (_turn) then {_direction = _direction - 90;_turn = false} else {_direction = _direction + 90;_turn = true};" \n
       "						_newPosition = [_newPosition, 150, _direction] call BIS_fnc_relPos;" \n
       "						_posWP = [_newPosition,50] call CBA_fnc_Randpos;" \n
       "" \n
       "						[_OPCOM_HANDLER,""setorders"",[_posWP,_profileID,_objectiveID,_operation]] call ALiVE_fnc_OPCOM;" \n
       "					};" \n
       "				} foreach _section;" \n
       "" \n
       "				_recon set [1,_section];" \n
       "				_TAC_confirmed = true;" \n
       "			} else {" \n
       "				if (count _section == 0) then {" \n
       "					_recon set [1,[""no groups available""]];" \n
       "					_TAC_confirmed = false;" \n
       "				} else {" \n
       "					{" \n
       "						_profileID = _x;" \n
       "" \n
       "						if (_profileID in _profiles) then {" \n
       "							_profile = [ALIVE_profileHandler, ""getProfile"", _profileID] call ALIVE_fnc_profileHandler;" \n
       "" \n
       "							//Select nearest taken objective to regroup" \n
       "							_posP = [_profile, ""position""] call ALIVE_fnc_profileEntity;" \n
       "							_objectivesX = [_objectives,[],{_posP distance (_x select 2 select 1)},""ASCEND""] call BIS_fnc_sortBy;" \n
       "							" \n
       "							{" \n
       "								_state = [_x,""opcom_state""] call ALivE_fnc_HashGet;" \n
       "								" \n
       "								if (_state == ""idle"") exitwith {" \n
       "									_objectiveID = [_x,""objectiveID""] call ALiVE_fnc_HashGet;" \n
       "									_posWP = [_x,""center""] call ALiVE_fnc_HashGet;" \n
       "									[_profile, ""clearWaypoints""] call ALIVE_fnc_profileEntity;" \n
       "									_profileWaypoint = [_posWP, 50] call ALIVE_fnc_createProfileWaypoint;" \n
       "									[_profile, ""addWaypoint"", _profileWaypoint] call ALIVE_fnc_profileEntity;" \n
       "								};" \n
       "							} foreach _objectivesX;" \n
       "						};" \n
       "					} foreach _section;" \n
       "" \n
       "					_recon set [1,[""not enough groups to build a section, regrouping...""]];" \n
       "					_TAC_confirmed = false;" \n
       "				};" \n
       "			};" \n
       "			_data = _recon;" \n
       "		};" \n
       "" \n
       "		case ( ""capture"") : {" \n
       "" \n
       "			if (count _section > 0) then {" \n
       "				[_objective,""tacom_state"",""capture""] call AliVE_fnc_HashSet;" \n
       "" \n
       "				{" \n
       "					private [""_profile"",""_profileID"",""_statements""];" \n
       "" \n
       "						_profileID = _x;" \n
       "" \n
       "						if (_profileID in _profiles) then {" \n
       "							[_OPCOM_HANDLER,""setorders"",[([_pos,50] call CBA_fnc_RandPos),_profileID,_objectiveID,_operation]] call ALiVE_fnc_OPCOM;" \n
       "						};" \n
       "				} foreach _section;" \n
       "" \n
       "				_TAC_confirmed = false;" \n
       "				_capture set [1,[""operation attack not finished""]];" \n
       "			} else {" \n
       "				_TAC_confirmed = false;" \n
       "				_capture set [1,[""no groups available""]];" \n
       "			};" \n
       "			_data = _capture;" \n
       "		};" \n
       "" \n
       "		case (""defend"") : {" \n
       "" \n
       "			if (count _section > 0) then {" \n
       "				[_objective,""tacom_state"",""defend""] call AliVE_fnc_HashSet;" \n
       "" \n
       "				{" \n
       "					private [""_profileID"",""_statements""];" \n
       "" \n
       "						_profileID = _x;" \n
       "" \n
       "						if (_profileID in _profiles) then {" \n
       "							[_OPCOM_HANDLER,""setorders"",[([_pos,50] call CBA_fnc_RandPos),_profileID,_objectiveID,_operation]] call ALiVE_fnc_OPCOM;" \n
       "						};" \n
       "				} foreach _section;" \n
       "" \n
       "				_TAC_confirmed = true;" \n
       "				_defend set [1,_section];" \n
       "			} else {" \n
       "				_TAC_confirmed = false;" \n
       "				_defend set [1,[""no groups available""]];" \n
       "			};" \n
       "			_data = _defend;" \n
       "		};" \n
       "" \n
       "		case ( ""reserve"") : {" \n
       "			if (count _section > 0) then {" \n
       "				[_objective,""tacom_state"",""reserve""] call AliVE_fnc_HashSet;" \n
       "" \n
       "				{" \n
       "					private [""_profileID"",""_statements""];" \n
       "" \n
       "						_profileID = _x;" \n
       "" \n
       "						if (_profileID in _profiles) then {" \n
       "							[_OPCOM_HANDLER,""setorders"",[([_pos,50] call CBA_fnc_RandPos),_profileID,_objectiveID,_operation]] call ALiVE_fnc_OPCOM;" \n
       "						};" \n
       "				} foreach _section;" \n
       "" \n
       "				_reserve set [1,_section];" \n
       "				_TAC_confirmed = true;" \n
       "			} else {" \n
       "				_reserve set [1,[""no groups available""]];" \n
       "				_TAC_confirmed = false;" \n
       "			};" \n
       "			_data = _reserve;" \n
       "		};" \n
       "		case (""custom"") : {};" \n
       "		default {};" \n
       "};"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "GROUP_CONFIRM">*/
        class GROUP_CONFIRM
        {
          priority = 0.000000;
          to="TRANSMIT_TO_OPCO";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_TAC_confirmed;"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "GROUP_NOT_CONFIR">*/
        class GROUP_NOT_CONFIR
        {
          priority = 0.000000;
          to="TRANSMIT_TO_OPCO_1";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"!(_TAC_confirmed) || {time - _timestamp > 30};"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "INITIALIZE">*/
    class INITIALIZE
    {
      name = "INITIALIZE";
      init = /*%FSM<STATEINIT""">*/"// debug ---------------------------------------" \n
       "if(_debug) then { [""TACOM initialized, %1!"",true] call ALIVE_fnc_dumpR; };" \n
       "// debug ---------------------------------------" \n
       ""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "RECEIVE">*/
        class RECEIVE
        {
          priority = 0.000000;
          to="COLLECT_TO_QUEUE";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_TACOM_status = ""waiting for data"";" \n
           "!(isnil ""_TACOM_DATA"");"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "TRANSMIT_TO_OPCO">*/
    class TRANSMIT_TO_OPCO
    {
      name = "TRANSMIT_TO_OPCO";
      init = /*%FSM<STATEINIT""">*/"_OPCOM_FSM setFSMVariable [""_OPCOM_DATA"",[""confirmed"",[true,_data]]];"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "RECEIVE">*/
        class RECEIVE
        {
          priority = 0.000000;
          to="COLLECT_TO_QUEUE";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_TACOM_status = ""waiting for data"";" \n
           "!(isnil ""_TACOM_DATA"");"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "TRANSMIT_TO_OPCO_1">*/
    class TRANSMIT_TO_OPCO_1
    {
      name = "TRANSMIT_TO_OPCO_1";
      init = /*%FSM<STATEINIT""">*/"_OPCOM_FSM setFSMVariable [""_OPCOM_DATA"",[""confirmed"",[false,_data]]];"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "RECEIVE">*/
        class RECEIVE
        {
          priority = 0.000000;
          to="COLLECT_TO_QUEUE";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_TACOM_status = ""waiting for data"";" \n
           "!(isnil ""_TACOM_DATA"");"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "COLLECT_TO_QUEUE">*/
    class COLLECT_TO_QUEUE
    {
      name = "COLLECT_TO_QUEUE";
      init = /*%FSM<STATEINIT""">*/"_TACOM_status = ""collect data to queue"";" \n
       "_timestamp = time;" \n
       "" \n
       "_TACOM_QUEUE set [count _TACOM_QUEUE,_TACOM_DATA];" \n
       "_TACOM_DATA = nil;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "ENTRIES_IN_QUEUE">*/
        class ENTRIES_IN_QUEUE
        {
          priority = 0.000000;
          to="ANALYZE";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(count _TACOM_QUEUE > 0) && !(_busy) && (time - _lastanalyze > 0.5);"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "SELECT_SECTION">*/
    class SELECT_SECTION
    {
      name = "SELECT_SECTION";
      init = /*%FSM<STATEINIT""">*/"private [""_objective"",""_section"",""_size"",""_sectionAssist"",""_operation"",""_hdl""];" \n
       "" \n
       "_TACOM_status = ""Select section"";" \n
       "_timestamp = time;" \n
       "" \n
       "//prepare data" \n
       "if !(isnil ""_recon"") then {_operation = ""recon""; _objective = _recon select 0; _size = _recon select 1};" \n
       "if !(isnil ""_capture"") then {_operation = ""capture""; _objective = _capture select 0; _size = _capture select 1};" \n
       "if !(isnil ""_defend"") then {_operation = ""defend""; _objective = _defend select 0; _size = _defend select 1};" \n
       "if !(isnil ""_reserve"") then {_operation = ""reserve""; _objective = _reserve select 0; _size = _reserve select 1};" \n
       "if !(isnil ""_custom"") then {_operation = ""custom""; _objective = _custom select 0; _size = _custom select 1};" \n
       "" \n
       "_section = [_objective,""section"",[]] call AliVE_fnc_HashGet;" \n
       "" \n
       "if (count _section < _size) then {" \n
       "	_hdl = [_OPCOM_HANDLER,[_objective,_size,""infantry""]] spawn {" \n
       "		private [""_objective"",""_pos""];" \n
       "" \n
       "		_objective = _this select 1 select 0;" \n
       "		_size = _this select 1 select 1;" \n
       "		_pos = ([_objective,""center""] call ALiVE_fnc_HashGet);" \n
       "" \n
       "		_sectionAssist = [_this select 0,""NearestAvailableSectionNew"",[_pos,_size,""land""]] call ALiVE_fnc_OPCOM;" \n
       "		[_objective, ""sectionAssist"",_sectionAssist] call ALiVE_fnc_HashSet;" \n
       "	};" \n
       "} else {" \n
       "	_hdl = [] spawn {true};" \n
       "};"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "SECTION_SELECTED">*/
        class SECTION_SELECTED
        {
          priority = 0.000000;
          to="PREPARE_ORDERS";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"scriptdone _hdl;"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "PREPARE_ORDERS">*/
    class PREPARE_ORDERS
    {
      name = "PREPARE_ORDERS";
      init = /*%FSM<STATEINIT""">*/"terminate _hdl;" \n
       "" \n
       "private [""_section"",""_sectionAssist""];" \n
       "" \n
       "_section = [_objective,""section"",[]] call AliVE_fnc_HashGet;" \n
       "_sectionAssist = [_objective,""sectionAssist"",[]] call AliVE_fnc_HashGet;" \n
       "" \n
       "//Add groups" \n
       "if (count _section < _size) then {" \n
       "" \n
       "	for ""_i"" from 0 to ((_size - (count _section)) - 1) do {" \n
       "		if (_i > ((count _sectionAssist) - 1)) exitwith {};" \n
       "		_section set [count _section,_sectionAssist select _i];" \n
       "	};" \n
       "	[_objective,""section"",_section] call AliVE_fnc_HashSet;" \n
       "};" \n
       "" \n
       "//Remove groups" \n
       "if (count ([_objective,""section"",_section] call AliVE_fnc_HashGet) >= _size) then {" \n
       "	{" \n
       "		if (count _section == _size) exitwith {};" \n
       "		[_OPCOM_HANDLER,""resetorders"",_x] call ALiVE_fnc_OPCOM;" \n
       "		_section = _section - [_x];" \n
       "	} foreach _section;" \n
       "	[_objective,""section"",_section] call AliVE_fnc_HashSet;" \n
       "};" \n
       "" \n
       "_section = [_objective,""section"",_section] call AliVE_fnc_HashGet;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "PREPARED">*/
        class PREPARED
        {
          priority = 0.000000;
          to="ISSUE_ORDERS";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"true"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
  };
  initState="INIT";
  finalStates[] =
  {
  };
};
/*%FSM</COMPILE>*/